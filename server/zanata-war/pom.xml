<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.zanata</groupId>
    <artifactId>server</artifactId>
    <version>4.0.0-SNAPSHOT</version>
  </parent>
  <artifactId>zanata-war</artifactId>
  <packaging>war</packaging>
  <name>Zanata web application</name>
  <description>Zanata translation platform</description>

  <!-- Should be the same as zanata-server/pom.xml -->
  <scm>
    <connection>scm:git:git://github.com/zanata/zanata.git</connection>
    <developerConnection>scm:git:git@github.com:zanata/zanata.git</developerConnection>
    <url>https://github.com/zanata/zanata</url>
    <tag>HEAD</tag>
  </scm>

  <properties>
    <war.config.dir>${basedir}/src/etc</war.config.dir>
    <allow.deploy.skip>true</allow.deploy.skip>

    <!-- application properties -->
    <env.debug>false</env.debug>
    <war.name>zanata</war.name>
    <extra.servlets />

    <!-- Default MySql login -->
    <mysql.user>root</mysql.user>
    <mysql.password />

    <!--this will get set by maven dependency:properties goal and be used in gwt-maven-plugin-->
    <lombok.lib>${org.projectlombok:lombok:jar}</lombok.lib>

    <jboss.as.standalone.version>7.5.0</jboss.as.standalone.version>
    <rpm.name>${project.build.finalName}</rpm.name>

    <as7.skip.deploy.marker>${jboss.home}/standalone/deployments/zanata.war.skipdeploy</as7.skip.deploy.marker>
    <as7.dodeploy.marker>${jboss.home}/standalone/deployments/zanata.war.dodeploy</as7.dodeploy.marker>
  </properties>

  <build>
    <finalName>zanata</finalName>

    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
      <resource>
        <!-- To be generated by Groovy script (gmavenplus-plugin) -->
        <directory>${project.build.directory}/generated-resources/deps</directory>
        <includes>
          <include>dependencies.properties</include>
        </includes>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>true</filtering>
        <includes>
          <include>testProp.properties</include>
        </includes>
      </testResource>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>false</filtering>
        <excludes>
          <exclude>testProp.properties</exclude>
        </excludes>
      </testResource>
    </testResources>

    <plugins>
      <plugin>
        <groupId>org.codehaus.gmavenplus</groupId>
        <artifactId>gmavenplus-plugin</artifactId>
        <executions>
          <execution>
            <id>default</id>
            <goals>
              <goal>addSources</goal>
              <goal>addTestSources</goal>
              <goal>generateStubs</goal>
              <goal>compile</goal>
              <goal>testGenerateStubs</goal>
              <goal>testCompile</goal>
              <goal>removeStubs</goal>
              <goal>removeTestStubs</goal>
            </goals>
          </execution>
          <execution>
            <id>dependency-versions</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <scripts>
                <script>file:///${project.basedir}/src/etc/dependencyVersions.groovy</script>

              </scripts>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>
      <plugin>
        <!-- if including source jars, use the no-fork goals
             otherwise both the Groovy sources and Java stub sources will get included in your jar -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar-no-fork</goal>
              <goal>test-jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <!-- This is used to set the property lombok.lib -->
          <execution>
            <id>dependency-properties</id>
            <phase>initialize</phase>
            <goals>
              <goal>properties</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <usedDependencies combine.children="append">
            <usedDependency>org.jboss.spec.javax.xml.bind:jboss-jaxb-api_2.2_spec</usedDependency>
            <!-- runtime dep for liquibase logging -->
            <usedDependency>com.mattbertolini:liquibase-slf4j</usedDependency>
            <!-- Used indirectly by org.zanata.arquillian.Deployments -->
            <usedDependency>org.jboss.shrinkwrap.resolver:shrinkwrap-resolver-api</usedDependency>
            <!-- Used by javamelody for email/pdf support -->
            <usedDependency>com.lowagie:itext</usedDependency>
            <!--used to log sql and parameters when debugging Hibernate -->
            <usedDependency>com.googlecode.log4jdbc:log4jdbc</usedDependency>
            <!-- required for guava in gwt -->
            <usedDependency>com.google.guava:guava-gwt</usedDependency>
            <!-- Used for StringUtils lib -->
            <!-- Needed by ui rendering at runtime -->
            <usedDependency>javax.servlet.jsp:jsp-api</usedDependency>
            <!-- Used for different content analyzers based on langugage for search. -->
            <usedDependency>org.apache.solr:solr-core</usedDependency>
            <usedDependency>org.apache.solr:solr-solrj</usedDependency>
            <!-- used for arquillian deployment (org.zanata.Deployments) -->
            <usedDependency>org.hibernate:hibernate-testing</usedDependency>
            <usedDependency>org.jboss.arquillian.junit:arquillian-junit-container</usedDependency>
            <usedDependency>org.jboss.arquillian.protocol:arquillian-protocol-servlet</usedDependency>
            <usedDependency>org.codehaus.jackson:jackson-xc</usedDependency>
            <!-- Used for email unit tests -->
            <usedDependency>org.jvnet.mock-javamail:mock-javamail</usedDependency>
            <!-- Need for test scope -->
            <usedDependency>${jdbc.groupId}:${jdbc.artifactId}</usedDependency>
            <!-- used for arquillian tests -->
            <usedDependency>org.wildfly.arquillian:wildfly-arquillian-container-managed</usedDependency>
            <!-- NB: Don't add anything without a comment explaining how the
                 dependency is used -->
          </usedDependencies>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.basepom.maven</groupId>
        <artifactId>duplicate-finder-maven-plugin</artifactId>
        <configuration>
          <ignoredDependencies>
            <dependency>
              <groupId>com.google.gwt</groupId>
              <artifactId>gwt-user</artifactId>
            </dependency>
          </ignoredDependencies>
          <ignoredResourcePatterns>
            <!-- many, many jars -->
            <ignoredResourcePattern>META-INF/.*</ignoredResourcePattern>
            <ignoredResourcePattern>VERSION\.properties</ignoredResourcePattern>
            <!-- iText and JavaMelody -->
            <ignoredResourcePattern>com/lowagie/text/pdf/fonts/cmap_info\.txt</ignoredResourcePattern>
            <!-- drools and quartz -->
            <ignoredResourcePattern>build\.properties</ignoredResourcePattern>
            <!-- jboss-metadata-common and zanata-adapter-xliff -->
            <ignoredResourcePattern>schema/xml\.xsd</ignoredResourcePattern>
            <!-- infinispan-core/common -->
            <ignoredResourcePattern>features\.xml</ignoredResourcePattern>
          </ignoredResourcePatterns>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <phase>prepare-package</phase>
            <configuration>
              <tasks>
                <mkdir dir="${project.build.directory}/zanata" />
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
          <execution>
            <id>print lombok location</id>
            <phase>process-resources</phase>
            <configuration>
              <target>
                <echo>lombok VM arguments for GWT compilation:</echo>
                <echo>-javaagent:${lombok.lib}=ECJ</echo>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <configuration>
          <!-- Remove extra directories created by GWT DevMode -->
          <filesets>
            <fileset>
              <directory>src/main/webapp/WEB-INF/deploy</directory>
            </fileset>
            <fileset>
              <directory>src/main/webapp/webtrans</directory>
            </fileset>
          </filesets>
          <followSymLinks>false</followSymLinks>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <warName>${war.name}-${project.version}</warName>
          <webResources>
            <resource>
              <directory>src/main/webapp-jboss</directory>
              <filtering>true</filtering>

            </resource>
            <resource>
              <directory>src/main/resources</directory>
              <includes>
                <include>images/**</include>
              </includes>
            </resource>
            <!-- Include the GWT generated resources -->
            <resource>
              <directory>${project.build.directory}/zanata</directory>
            </resource>
          </webResources>
          <archive>
            <manifest>
              <addClasspath>false</addClasspath>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
            </manifest>
            <manifestEntries>
              <Implementation-Build>${maven.build.timestamp}</Implementation-Build>
              <SCM-Describe>${gitDescribe}</SCM-Describe>
            </manifestEntries>
          </archive>
        </configuration>
        <executions>
          <!-- Internal auth war -->
          <execution>
            <id>default-war</id>
            <configuration>
              <webappDirectory>${project.build.directory}/${project.build.finalName}</webappDirectory>
              <filters>
                <filter>${war.config.dir}/mysql.properties</filter>
              </filters>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <!-- server pom has same plugin definition with different includes -->
        <groupId>org.zanata</groupId>
        <configuration>
          <srcDir>${project.build.directory}/gwt-extra/webtrans</srcDir>
          <transDir>src/main/resources/zanata-editor</transDir>
          <includes>**/*.properties</includes>
          <excludes>**/*_default.properties</excludes>
        </configuration>
        <artifactId>zanata-maven-plugin</artifactId>
        <version>${zanata.client.version}</version>
      </plugin>

      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <argLine>-Dconcordion.output.dir=${concordion.output.dir}</argLine>
          <testNGArtifactName>none:none</testNGArtifactName>
          <!-- TODO ensure that stateful tests (eg using Hibernate Search)
               are isolated, or rename them to ITCase (Arquillian), and
               increase the forkCount.
               <forkCount>1.5C</forkCount>
           -->
          <forkCount>1</forkCount>
          <reuseForks>true</reuseForks>
          <includes>
            <include>**/*Test.groovy</include>
            <include>**/*Test.java</include>
            <include>**/*Tests.groovy</include>
            <include>**/*Tests.java</include>
          </includes>
          <runOrder>alphabetical</runOrder>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>cobertura-maven-plugin</artifactId>
        <configuration>
          <instrumentation>
            <excludes>
              <!--WebTran exclusion-->
              <!--TODO move all gwt wrapper class under specific package. i.e boundary-->
              <!--<exclude>**/boundary/**/*</exclude>-->
              <exclude>**/test/**/*</exclude>
              <exclude>**/Sample*</exclude>
              <exclude>**/dto/**</exclude>
              <!--<exclude>**/supersource/**/*</exclude>-->
              <exclude>**/client/**/*View</exclude>
              <exclude>**/client/Application*</exclude>
              <exclude>**/client/auth/**</exclude>
              <exclude>**/client/events/**</exclude>
              <exclude>**/client/gin/**</exclude>
              <exclude>**/client/rpc/**</exclude>
              <exclude>**/client/ui/**</exclude>
              <exclude>**/client/view/**</exclude>
              <exclude>**/client/util/**</exclude>
              <exclude>**/EventWrapperImpl*</exclude>
              <exclude>**/*DataProvider*</exclude>
              <exclude>**/*SelectionModel*</exclude>
              <!--below are some trivial classes(java bean) at the moment-->
              <exclude>**/shared/auth/**</exclude>
              <exclude>**/shared/model/**</exclude>
              <exclude>**/shared/rpc/**</exclude>
              <exclude>**/shared/util/**</exclude>
              <!--hard to test due to environment dependent-->
              <exclude>org/zanata/security/**</exclude>

              <!--Server exclusion-->
              <exclude>**/job/**</exclude>
              <exclude>**/liquibase/**</exclude>
              <exclude>**/log4j/**</exclude>
              <exclude>**/seam/**</exclude>
              <exclude>**/rest/files/*</exclude>
              <exclude>**/rest/*Mapper</exclude>
              <exclude>**/openid/*</exclude>
              <exclude>**/servlet/*</exclude>

              <!--General exclusion-->
              <exclude>**/*Exception*</exclude>
            </excludes>
          </instrumentation>
          <check>
            <totalBranchRate>${cobertura.total-branch-rate}</totalBranchRate>
            <totalLineRate>${cobertura.total-line-rate}</totalLineRate>
            <haltOnFailure>${cobertura.halt.failure}</haltOnFailure>
          </check>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>l10n-maven-plugin</artifactId>
        <version>1.0-alpha-2</version>
        <executions>
          <execution>
            <phase>generate-resources</phase>
            <goals>
              <goal>pseudo</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <pseudoLocale>qc</pseudoLocale>
          <includes>
            <include>**/*.properties</include>
          </includes>
          <excludes>
            <exclude>**/*_*.properties</exclude>
            <exclude>**/eventservice.properties</exclude>
            <exclude>**/pluralforms.properties</exclude>
          </excludes>
          <inputDirectory>src/main/resources</inputDirectory>
          <outputDirectory>${project.build.outputDirectory}</outputDirectory>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-deploy-plugin</artifactId>
        <!-- zanata war is too big to deploy to Maven repos -->
        <configuration>
          <!-- MEAD builds must deploy all artifacts, so we run them with -Dallow.deploy.skip=false -->
          <skip>${allow.deploy.skip}</skip>
        </configuration>
      </plugin>

    </plugins>

    <pluginManagement>
      <plugins>
        <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>
                      org.codehaus.mojo
                    </groupId>
                    <artifactId>
                      l10n-maven-plugin
                    </artifactId>
                    <versionRange>
                      [1.0-alpha-2,)
                    </versionRange>
                    <goals>
                      <goal>pseudo</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>
                      org.codehaus.mojo
                    </groupId>
                    <artifactId>
                      hibernate3-maven-plugin
                    </artifactId>
                    <versionRange>
                      [2.2,)
                    </versionRange>
                    <goals>
                      <goal>hbm2ddl</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>
                      org.apache.maven.plugins
                    </groupId>
                    <artifactId>
                      maven-antrun-plugin
                    </artifactId>
                    <versionRange>
                      [1.7,)
                    </versionRange>
                    <goals>
                      <goal>run</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>
                      org.apache.maven.plugins
                    </groupId>
                    <artifactId>
                      maven-dependency-plugin
                    </artifactId>
                    <versionRange>
                      [2.4,)
                    </versionRange>
                    <goals>
                      <goal>properties</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>
                      org.codehaus.gmaven
                    </groupId>
                    <artifactId>
                      gmaven-plugin
                    </artifactId>
                    <versionRange>
                      [1.4,)
                    </versionRange>
                    <goals>
                      <goal>testCompile</goal>
                      <goal>
                        generateTestStubs
                      </goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <execute>
                      <runOnIncremental>false</runOnIncremental>
                    </execute>
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>

      </plugins>
    </pluginManagement>
  </build>

  <profiles>
    <profile>
      <!-- This profile will copy the exploded war to AS7 and trigger a re-deployment. -->
      <id>explode</id>
      <activation>
        <property>
          <name>env</name>
          <value>dev</value>
        </property>
      </activation>
      <properties>
        <as7.skip.deploy.marker>${jboss.home}/standalone/deployments/zanata.war.skipdeploy</as7.skip.deploy.marker>
        <as7.dodeploy.marker>${jboss.home}/standalone/deployments/zanata.war.dodeploy</as7.dodeploy.marker>
      </properties>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <phase>package</phase>
                <configuration>
                  <tasks>
                    <touch file="${as7.skip.deploy.marker}" />
                    <delete dir="${jboss.home}/standalone/deployments/zanata.war" />
                    <copy todir="${jboss.home}/standalone/deployments/zanata.war">
                      <fileset dir="${project.build.directory}/zanata" />
                    </copy>
                    <delete file="${as7.skip.deploy.marker}" />
                    <touch file="${as7.dodeploy.marker}" />
                  </tasks>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>replace-static</id>
      <!-- This profile will replace exploded war in AS7 WITHOUT triggering a re-deployment.
      If you change xhtml or similar which does not require a redeployment, you can use this profile. -->
      <activation>
        <property>
          <name>env</name>
          <value>dev</value>
        </property>
      </activation>
      <properties>
        <as7.skip.deploy.marker>${jboss.home}/standalone/deployments/zanata.war.skipdeploy</as7.skip.deploy.marker>
      </properties>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <phase>package</phase>
                <configuration>
                  <tasks>
                    <touch file="${as7.skip.deploy.marker}" />
                    <delete dir="${jboss.home}/standalone/deployments/zanata.war" />
                    <copy todir="${jboss.home}/standalone/deployments/zanata.war">
                      <fileset dir="${project.build.directory}/zanata" />
                    </copy>
                    <delete file="${as7.skip.deploy.marker}" />
                  </tasks>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>it-coverage</id>
      <!-- In order to combine unit test and integration test coverage together, it requires below two commands:
      mvn clean verify -Pit-coverage,nogwt
      mvn cobertura:cobertura
      Adding -Dcobertura.report.format=html to the second command will output report as html.
      Jenkins requires xml format.
      -->
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>cobertura-it-maven-plugin</artifactId>
            <version>2.5</version>
            <configuration>
              <instrumentation>
                <excludes>
                  <!--WebTran exclusion-->
                  <!--TODO move all gwt wrapper class under specific package. i.e boundary-->
                  <!--<exclude>**/boundary/**/*</exclude>-->
                  <exclude>**/test/**/*</exclude>
                  <!--<exclude>**/supersource/**/*</exclude>-->
                  <exclude>**/client/**/*View</exclude>
                  <exclude>**/client/Application*</exclude>
                  <exclude>**/client/auth/**</exclude>
                  <exclude>**/client/events/**</exclude>
                  <exclude>**/client/gin/**</exclude>
                  <exclude>**/client/rpc/**</exclude>
                  <exclude>**/client/ui/**</exclude>
                  <exclude>**/client/view/**</exclude>
                  <exclude>**/EventWrapperImpl*</exclude>
                  <exclude>**/*DataProvider*</exclude>
                  <exclude>**/*SelectionModel*</exclude>
                  <!--below are some trivial classes(java bean) at the moment-->
                  <exclude>**/shared/auth/**</exclude>
                  <exclude>**/shared/model/**</exclude>
                  <exclude>**/shared/rpc/**</exclude>

                  <!--Server exclusion-->
                  <exclude>**/job/**</exclude>
                  <exclude>**/liquibase/**</exclude>
                  <exclude>**/log4j/**</exclude>
                  <exclude>**/seam/**</exclude>
                  <exclude>**/rest/files/*</exclude>
                  <exclude>**/rest/*Mapper</exclude>
                  <exclude>**/openid/*</exclude>
                  <exclude>**/servlet/*</exclude>

                  <!--General exclusion-->
                  <exclude>**/*Exception*</exclude>
                </excludes>
              </instrumentation>
              <formats>
                <format>xml</format>
              </formats>
              <check>
                <haltOnFailure>false</haltOnFailure>
              </check>
            </configuration>
            <executions>
              <execution>
                <id>cobertura-clean</id>
                <phase>clean</phase>
                <goals>
                  <goal>clean</goal>
                </goals>
              </execution>
              <execution>
                <id>cobertura-instrument</id>
                <phase>process-classes</phase>
                <goals>
                  <goal>instrument</goal>
                </goals>
              </execution>
              <execution>
                <id>cobertura-check-only</id>
                <phase>verify</phase>
                <goals>
                  <goal>check-only</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>

      <reporting>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>cobertura-it-maven-plugin</artifactId>
            <configuration>
              <formats>
                <format>html</format>
                <!--<format>xml</format>-->
              </formats>
            </configuration>
            <reportSets>
              <reportSet>
                <reports>
                  <report>report-only</report>
                </reports>
              </reportSet>
            </reportSets>
          </plugin>
        </plugins>
      </reporting>
    </profile>

    <profile>
      <id>gwt-i18n</id>
      <activation>
        <property>
          <name>gwt-i18n</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>gwt-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>generate-i18n</id>
                <goals>
                  <goal>compile</goal>
                </goals>
                <!--here we bind it to generate-test-resource because we want it to happen before the real compile(prepare-package) and able to do its job -->
                <phase>generate-test-resources</phase>
                <configuration>
                  <module>org.zanata.webtrans.ApplicationI18n</module>
                  <extra>${project.build.directory}/gwt-extra</extra>
                  <extraParam>true</extraParam>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.gmaven</groupId>
            <artifactId>gmaven-plugin</artifactId>
            <configuration>
              <!-- the groovy.script will be given by command line arg -->
              <!-- at the moment it's used in zanata.xml as command hook -->
              <source>${pom.basedir}/src/etc/${groovy.script}</source>
            </configuration>
            <executions>
              <execution>
                <phase>generate-test-resources</phase>
                <goals>
                  <goal>execute</goal>
                </goals>
                <configuration>
                  <classpath>
                    <element>
                      <groupId>com.google.guava</groupId>
                      <artifactId>guava</artifactId>
                    </element>
                  </classpath>
                  <source>${pom.basedir}/src/etc/PrepareGWTI18NProperties.groovy</source>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>skipArqTests</id>
      <activation>
        <property>
          <name>skipArqTests</name>
        </property>
      </activation>
      <properties>
        <skipITs>true</skipITs>
      </properties>
    </profile>

    <profile>
      <id>run-arq-tests</id>
      <activation>
        <property>
          <name>!skipArqTests</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>init-no-appserver</id>
                <phase>initialize</phase>
              </execution>
              <execution>
                <id>preIT-no-appserver</id>
                <phase>prepare-package</phase>
                <goals><goal>run</goal></goals>
                <configuration>
                  <target unless="skipArqTests">
                    <fail message="'appserver' property must be set to run integration tests (or else use -DskipArqTests)" unless="appserver" />
                    <fail message="'cargo.installation' property is null (set env var EAP7_URL or else use -DskipArqTests)" unless="cargo.installation" />
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.gmavenplus</groupId>
            <artifactId>gmavenplus-plugin</artifactId>
            <executions>
              <execution>
                <id>extract-appserver</id>
                <phase>prepare-package</phase>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration>
              <includes>
                <include>**/*ITCase.groovy</include>
                <include>**/*ITCase.java</include>
              </includes>
              <forkCount>1</forkCount>
              <reuseForks>true</reuseForks>
              <redirectTestOutputToFile>false</redirectTestOutputToFile>
              <runOrder>alphabetical</runOrder>
              <systemPropertyVariables>
                <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                <jboss.home>${appserver.home}</jboss.home>
              </systemPropertyVariables>
              <testNGArtifactName>none:none</testNGArtifactName>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>jbosseap6</id>
      <activation>
        <property>
          <name>appserver</name>
          <value>jbosseap6</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <!-- Install arquillian-customised version of standalone.xml -->
              <execution>
                <id>prepare-arquillian-container</id>
                <phase>package</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target unless="skipArqTests">
                    <copy overwrite="true" file="${project.basedir}/src/test/resources/arquillian/standalone-arquillian.xml" tofile="${appserver.home}/standalone/configuration/standalone-arquillian.xml" />
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration>
              <systemPropertyVariables>
                <!-- NB this is a container qualifier in arquillian.xml -->
                <arquillian.launch>jbossas-managed</arquillian.launch>
              </systemPropertyVariables>
            </configuration>
          </plugin>

        </plugins>
      </build>
    </profile>

    <profile>
      <id>wildfly8</id>
      <activation>
        <property>
          <name>appserver</name>
          <value>wildfly8</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <!-- Install arquillian-customised version of standalone.xml -->
              <execution>
                <id>prepare-arquillian-container</id>
                <phase>package</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target unless="skipArqTests">
                    <copy overwrite="true" file="${project.basedir}/src/test/resources/arquillian/standalone-arquillian-wildfly.xml" tofile="${appserver.home}/standalone/configuration/standalone-arquillian.xml" />
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration>
              <systemPropertyVariables>
                <!-- NB this is a container qualifier in arquillian.xml -->
                <arquillian.launch>wildfly</arquillian.launch>
              </systemPropertyVariables>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>rpm</id>
      <activation>
        <property>
          <name>rpm</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>rpm-maven-plugin</artifactId>
            <version>2.1.3</version>
            <executions>
              <execution>
                <id>attach-rpm</id>
                <goals>
                  <goal>attached-rpm</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <name>${rpm.name}</name>
              <group>Applications/Text</group>
              <license>GNU Lesser General Public License v2.1</license>

              <!-- Make the rpm compatible with RHEL 5 -->
              <defineStatements>
                <defineStatement>_source_filedigest_algorithm md5</defineStatement>
                <defineStatement>_binary_filedigest_algorithm md5</defineStatement>
                <defineStatement>_source_payload w9.gzdio</defineStatement>
                <defineStatement>_binary_payload w9.gzdio</defineStatement>
              </defineStatements>

              <defaultUsername>jboss</defaultUsername>
              <defaultGroupname>jboss</defaultGroupname>
              <defaultDirmode>755</defaultDirmode>
              <defaultFilemode>644</defaultFilemode>
              <mappings>
                <mapping>
                  <directory>/usr/share/webapps/${rpm.name}/${rpm.name}-${project.version}.war/</directory>
                  <sources>
                    <source>
                      <location>target/${project.build.finalName}</location>
                    </source>
                  </sources>
                </mapping>
                <mapping>
                  <directory>/usr/share/webapps/${rpm.name}/</directory>
                  <sources>
                    <softlinkSource>
                      <location>${rpm.name}-${project.version}.war</location>
                      <destination>${rpm.name}.war</destination>
                    </softlinkSource>
                  </sources>
                </mapping>
                <mapping>
                  <directory>/var/lib/${rpm.name}/</directory>
                </mapping>
                <mapping>
                  <directory>/var/lib/${rpm.name}/index/</directory>
                </mapping>
                <mapping>
                  <directory>/var/lib/${rpm.name}/stats/</directory>
                </mapping>
              </mappings>
              <autoProvides>false</autoProvides>
              <autoRequires>false</autoRequires>
              <requires>
                <require>java &gt;= 1:${required.java}</require>
                <require>jbossas-standalone &gt;= ${jboss.as.standalone.version}</require>
              </requires>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <dependencies>

    <dependency>
      <groupId>com.tngtech.java</groupId>
      <artifactId>junit-dataprovider</artifactId>
      <version>1.10.2</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>commons-beanutils</groupId>
      <artifactId>commons-beanutils</artifactId>
      <version>1.9.1</version>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>com.jayway.awaitility</groupId>
      <artifactId>awaitility</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.velocity</groupId>
      <artifactId>velocity</artifactId>
      <version>1.7</version>
    </dependency>

    <dependency>
      <groupId>net.jodah</groupId>
      <artifactId>concurrentunit</artifactId>
      <version>0.4.1</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jglue.cdi-unit</groupId>
      <artifactId>cdi-unit</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.jboss.weld.se</groupId>
          <artifactId>weld-se-core</artifactId>
        </exclusion>
      </exclusions>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.atteo.classindex</groupId>
      <artifactId>classindex</artifactId>
    </dependency>

    <dependency>
      <groupId>com.googlecode.totallylazy</groupId>
      <artifactId>totallylazy</artifactId>
      <version>1.10</version>
    </dependency>

    <!-- Zanata-specific dependencies -->

    <dependency>
      <groupId>org.zanata</groupId>
      <artifactId>zanata-common-api</artifactId>
      <exclusions>
        <exclusion>
          <groupId>javax.servlet</groupId>
          <artifactId>servlet-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.zanata</groupId>
      <artifactId>gwt-editor</artifactId>
    </dependency>

    <dependency>
      <groupId>org.zanata</groupId>
      <artifactId>zanata-assets</artifactId>
    </dependency>

    <dependency>
      <groupId>org.zanata</groupId>
      <artifactId>zanata-frontend</artifactId>
    </dependency>

    <dependency>
      <groupId>org.zanata</groupId>
      <artifactId>zanata-common-util</artifactId>
    </dependency>

    <dependency>
      <groupId>org.zanata</groupId>
      <artifactId>zanata-liquibase</artifactId>
    </dependency>

    <dependency>
      <groupId>org.zanata</groupId>
      <artifactId>zanata-model</artifactId>
    </dependency>

    <dependency>
      <groupId>org.zanata</groupId>
      <artifactId>zanata-adapter-po</artifactId>
      <exclusions>
        <exclusion>
          <groupId>javax.xml.bind</groupId>
          <artifactId>jaxb-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.zanata</groupId>
      <artifactId>zanata-adapter-glossary</artifactId>
    </dependency>

    <dependency>
      <groupId>org.zanata</groupId>
      <artifactId>zanata-adapter-properties</artifactId>
    </dependency>

    <dependency>
      <groupId>org.zanata</groupId>
      <artifactId>zanata-adapter-xliff</artifactId>
    </dependency>

    <!-- Compatibility Dependencies -->

    <dependency>
      <groupId>org.zanata</groupId>
      <artifactId>zanata-common-api</artifactId>
      <classifier>compat</classifier>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.weld.se</groupId>
      <artifactId>weld-se-core</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.wildfly.arquillian</groupId>
      <artifactId>wildfly-arquillian-container-managed</artifactId>
      <version>${wildfly.arquillian.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.json</groupId>
      <artifactId>json</artifactId>
      <version>20140107</version>
    </dependency>

    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
    </dependency>

    <!-- RestEasy dependencies -->

    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-cdi</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jaxrs</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jaxb-provider</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jackson-provider</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-multipart-provider</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-servlet-initializer</artifactId>
    </dependency>

    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-core-asl</artifactId>
    </dependency>
    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-mapper-asl</artifactId>
    </dependency>
    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-xc</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jboss.spec.javax.faces</groupId>
      <artifactId>jboss-jsf-api_2.2_spec</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.spec.javax.transaction</groupId>
      <artifactId>jboss-transaction-api_1.2_spec</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- used for Seam Text converter -->
    <dependency>
      <groupId>antlr</groupId>
      <artifactId>antlr</artifactId>
    </dependency>

    <dependency>
      <groupId>com.googlecode.owasp-java-html-sanitizer</groupId>
      <artifactId>owasp-java-html-sanitizer</artifactId>
      <version>r239</version>
      <exclusions>
        <exclusion>
          <groupId>com.google.code.findbugs</groupId>
          <artifactId>jsr305</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.jvnet.mock-javamail</groupId>
      <artifactId>mock-javamail</artifactId>
      <version>1.9</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>javax.mail</groupId>
          <artifactId>mail</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- Richfaces -->
    <dependency>
      <groupId>org.richfaces</groupId>
      <artifactId>richfaces</artifactId>
    </dependency>

    <dependency>
      <groupId>com.sun.faces</groupId>
      <artifactId>jsf-impl</artifactId>
    </dependency>

    <!-- Hibernate / JPA -->

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-core</artifactId>
      <scope>${hibernate.scope}</scope>
    </dependency>

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-validator</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-validator-cdi</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.deltaspike.modules</groupId>
      <artifactId>deltaspike-bean-validation-module-impl</artifactId>
      <version>${deltaspike.version}</version>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-entitymanager</artifactId>
      <scope>${hibernate.scope}</scope>
      <exclusions>
        <!-- we use javax.persistence:persistence-api -->
        <exclusion>
          <artifactId>ejb3-persistence</artifactId>
          <groupId>org.hibernate</groupId>
        </exclusion>
        <exclusion>
          <groupId>org.jboss.logging</groupId>
          <artifactId>jboss-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-testing</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>tools</artifactId>
          <groupId>com.sun</groupId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>io.undertow</groupId>
      <artifactId>undertow-core</artifactId>
      <version>1.3.15.Final</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>io.undertow</groupId>
      <artifactId>undertow-servlet</artifactId>
      <version>1.3.15.Final</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>org.jboss.spec.javax.servlet</groupId>
          <artifactId>jboss-servlet-api_3.1_spec</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.jboss.spec.javax.annotation</groupId>
          <artifactId>jboss-annotations-api_1.2_spec</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>com.github.huangp</groupId>
      <artifactId>entityunit</artifactId>
      <version>0.3</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.googlecode.log4jdbc</groupId>
      <artifactId>log4jdbc</artifactId>
      <version>1.2</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>net.htmlparser.jericho</groupId>
      <artifactId>jericho-html</artifactId>
      <version>3.4</version>
    </dependency>

    <!-- Okapi Filters -->

    <dependency>
      <groupId>net.sf.okapi.filters</groupId>
      <artifactId>okapi-filter-dtd</artifactId>
    </dependency>
    <dependency>
      <groupId>net.sf.okapi.filters</groupId>
      <artifactId>okapi-filter-html</artifactId>
    </dependency>
    <dependency>
      <groupId>net.sf.okapi.filters</groupId>
      <artifactId>okapi-filter-json</artifactId>
    </dependency>
    <dependency>
      <groupId>net.sf.okapi.filters</groupId>
      <artifactId>okapi-filter-idml</artifactId>
    </dependency>
    <dependency>
      <groupId>net.sf.okapi.filters</groupId>
      <artifactId>okapi-filter-openoffice</artifactId>
    </dependency>
    <dependency>
      <groupId>net.sf.okapi.filters</groupId>
      <artifactId>okapi-filter-plaintext</artifactId>
    </dependency>
    <dependency>
      <groupId>net.sf.okapi.filters</groupId>
      <artifactId>okapi-filter-regex</artifactId>
    </dependency>
      <dependency>
        <groupId>net.sf.okapi.filters</groupId>
        <artifactId>okapi-filter-ts</artifactId>
        <exclusions>
          <exclusion>
            <groupId>org.codehaus.woodstox</groupId>
            <artifactId>woodstox-core-lgpl</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
    <dependency>
      <groupId>net.sf.okapi</groupId>
      <artifactId>okapi-core</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-simple</artifactId>
        </exclusion>
      </exclusions>
    </dependency>


    <!-- Other -->

    <dependency>
      <groupId>org.dbunit</groupId>
      <artifactId>dbunit</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.ocpsoft.rewrite</groupId>
      <artifactId>rewrite-servlet</artifactId>
      <version>${rewrite.version}</version>
    </dependency>

    <dependency>
      <groupId>org.ocpsoft.logging</groupId>
      <artifactId>logging-adapter-jboss</artifactId>
      <version>1.0.3.Final</version>
    </dependency>

    <dependency>
      <groupId>com.ibm.icu</groupId>
      <artifactId>icu4j</artifactId>
    </dependency>

    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jul-to-slf4j</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>net.sourceforge.openutils</groupId>
      <artifactId>openutils-log4j</artifactId>
      <version>2.0.5</version>
    </dependency>

    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
    </dependency>

    <dependency>
      <groupId>net.bull.javamelody</groupId>
      <artifactId>javamelody-core</artifactId>
      <version>1.60.0</version>
    </dependency>

    <dependency>
      <groupId>com.lowagie</groupId>
      <artifactId>itext</artifactId>
      <version>2.1.7</version>
      <scope>runtime</scope>
      <exclusions>
        <exclusion>
          <groupId>org.bouncycastle</groupId>
          <artifactId>bctsp-jdk14</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.fedorahosted.openprops</groupId>
      <artifactId>openprops</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.lucene</groupId>
      <artifactId>lucene-core</artifactId>
      <!-- okapi-lib-search would otherwise use lucene 3.0.0 -->
      <version>${lucene.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.lucene</groupId>
      <artifactId>lucene-queryparser</artifactId>
      <version>${lucene.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact</artifactId>
      <version>3.2.1</version>
      <!-- We only need the class DefaultArtifactVersion -->
      <exclusions>
        <exclusion>
          <groupId>org.codehaus.plexus</groupId>
          <artifactId>plexus-utils</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- Solr dependencies -->
    <dependency>
      <groupId>org.apache.solr</groupId>
      <artifactId>solr-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.solr</groupId>
      <artifactId>solr-solrj</artifactId>
    </dependency>

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-search-orm</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.hibernate</groupId>
          <artifactId>hibernate-commons-annotations</artifactId>
        </exclusion>
        <!-- we use javax.persistence:persistence-api -->
        <exclusion>
          <groupId>org.hibernate</groupId>
          <artifactId>ejb3-persistence</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.hibernate.common</groupId>
      <artifactId>hibernate-commons-annotations</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.hibernate.javax.persistence</groupId>
      <artifactId>hibernate-jpa-2.1-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-search-engine</artifactId>
    </dependency>
    <dependency>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-directory-provider</artifactId>
    </dependency>

    <dependency>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-core</artifactId>
      <version>${infinispan.version}</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>org.jboss.marshalling</groupId>
          <artifactId>jboss-marshalling-osgi</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.jboss.spec.javax.transaction</groupId>
          <artifactId>jboss-transaction-api_1.1_spec</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- These two are being explicitly added as jboss-as-parent
      excludes them -->
    <dependency>
      <groupId>org.jboss.marshalling</groupId>
      <artifactId>jboss-marshalling</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jboss.marshalling</groupId>
      <artifactId>jboss-marshalling-river</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jboss.spec.javax.el</groupId>
      <artifactId>jboss-el-api_3.0_spec</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.spec.javax.servlet</groupId>
      <artifactId>jboss-servlet-api_3.1_spec</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>javax.servlet.jsp</groupId>
      <artifactId>jsp-api</artifactId>
      <version>2.2</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>com.sun.mail</groupId>
      <artifactId>javax.mail</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-core</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-library</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>javax.activation</groupId>
      <artifactId>activation</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>javax.enterprise</groupId>
      <artifactId>cdi-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.reflections</groupId>
      <artifactId>reflections</artifactId>
      <version>0.9.10</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>javax.xml.stream</groupId>
      <artifactId>stax-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- Container dependencies - provided by jboss -->

    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jboss.security</groupId>
      <artifactId>jboss-negotiation-common</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jboss.spec.javax.jms</groupId>
      <artifactId>jboss-jms-api_2.0_spec</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.spec.javax.ejb</groupId>
      <artifactId>jboss-ejb-api_3.2_spec</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- needed by H2 triggers -->
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>1.4.192</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.javassist</groupId>
      <artifactId>javassist</artifactId>
      <scope>${hibernate.scope}</scope>
    </dependency>

    <!-- This must appear before arquillian dependencies -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.shrinkwrap</groupId>
      <artifactId>shrinkwrap-api</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.shrinkwrap.resolver</groupId>
      <artifactId>shrinkwrap-resolver-api-maven</artifactId>
      <version>${shrinkwrap.resolver.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.shrinkwrap.resolver</groupId>
      <artifactId>shrinkwrap-resolver-api</artifactId>
      <version>${shrinkwrap.resolver.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.arquillian.config</groupId>
      <artifactId>arquillian-config-api</artifactId>
      <version>${arquillian.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.arquillian.container</groupId>
      <artifactId>arquillian-container-test-api</artifactId>
      <version>${arquillian.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.arquillian.container</groupId>
      <artifactId>arquillian-container-test-impl-base</artifactId>
      <version>${arquillian.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.arquillian.container</groupId>
      <artifactId>arquillian-container-spi</artifactId>
      <version>${arquillian.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.arquillian.core</groupId>
      <artifactId>arquillian-core-spi</artifactId>
      <version>${arquillian.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.arquillian.core</groupId>
      <artifactId>arquillian-core-api</artifactId>
      <version>${arquillian.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.arquillian.junit</groupId>
      <artifactId>arquillian-junit-container</artifactId>
      <version>${arquillian.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.arquillian.junit</groupId>
      <artifactId>arquillian-junit-core</artifactId>
      <version>${arquillian.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.arquillian.test</groupId>
      <artifactId>arquillian-test-api</artifactId>
      <version>${arquillian.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.arquillian.test</groupId>
      <artifactId>arquillian-test-spi</artifactId>
      <version>${arquillian.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- Currently only needed for our override of Arquillian's
    ManagementClient -->
    <dependency>
      <groupId>org.jboss.logging</groupId>
      <artifactId>jboss-logging</artifactId>
      <version>3.3.0.Final</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.shrinkwrap.resolver</groupId>
      <artifactId>shrinkwrap-resolver-impl-maven</artifactId>
      <version>2.0.0</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.arquillian.protocol</groupId>
      <artifactId>arquillian-protocol-servlet</artifactId>
      <version>${arquillian.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>${jdbc.groupId}</groupId>
      <artifactId>${jdbc.artifactId}</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.concordion</groupId>
      <artifactId>concordion</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
    </dependency>

    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy-all</artifactId>
      <version>${groovy.version}</version>
    </dependency>

    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
      <version>1.3.1</version>
    </dependency>

    <dependency>
      <groupId>com.google.inject</groupId>
      <artifactId>guice</artifactId>
    </dependency>

    <dependency>
      <groupId>org.liquibase</groupId>
      <artifactId>liquibase-core</artifactId>
    </dependency>

    <dependency>
      <groupId>com.mattbertolini</groupId>
      <artifactId>liquibase-slf4j</artifactId>
      <version>2.0.0</version>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-exec</artifactId>
      <version>1.3</version>
    </dependency>

    <!-- See https://issues.jboss.org/browse/WFK2-674
 For some warnings in the console. It happens when deltaspike-jsf
 doesn't run against jsf 2.1 (eap) -->
    <dependency>
      <groupId>org.apache.deltaspike.core</groupId>
      <artifactId>deltaspike-core-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.deltaspike.core</groupId>
      <artifactId>deltaspike-core-impl</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.deltaspike.modules</groupId>
      <artifactId>deltaspike-servlet-module-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.deltaspike.modules</groupId>
      <artifactId>deltaspike-servlet-module-impl</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.deltaspike.modules</groupId>
      <artifactId>deltaspike-jsf-module-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.deltaspike.modules</groupId>
      <artifactId>deltaspike-jsf-module-impl</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.deltaspike.modules</groupId>
      <artifactId>deltaspike-security-module-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.deltaspike.modules</groupId>
      <artifactId>deltaspike-security-module-impl</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.deltaspike.modules</groupId>
      <artifactId>deltaspike-jpa-module-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.deltaspike.modules</groupId>
      <artifactId>deltaspike-jpa-module-impl</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.deltaspike.cdictrl</groupId>
      <artifactId>deltaspike-cdictrl-api</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.deltaspike.cdictrl</groupId>
      <artifactId>deltaspike-cdictrl-weld</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.deltaspike.modules</groupId>
      <artifactId>deltaspike-scheduler-module-api</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.deltaspike.modules</groupId>
      <artifactId>deltaspike-scheduler-module-impl</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.oltu.oauth2</groupId>
      <artifactId>org.apache.oltu.oauth2.authzserver</artifactId>
      <version>1.0.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.oltu.oauth2</groupId>
      <artifactId>org.apache.oltu.oauth2.resourceserver</artifactId>
      <version>1.0.1</version>
    </dependency>

    <dependency>
      <groupId>org.quartz-scheduler</groupId>
      <artifactId>quartz</artifactId>
    </dependency>

    <dependency>
      <groupId>org.ocpsoft.prettytime</groupId>
      <artifactId>prettytime</artifactId>
      <version>3.0.2.Final</version>
    </dependency>

    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpcore</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
    </dependency>

    <!-- openid4java -->
    <dependency>
      <groupId>org.openid4java</groupId>
      <artifactId>openid4java</artifactId>
      <version>1.0.0</version>
      <exclusions>
        <exclusion>
          <groupId>xml-apis</groupId>
          <artifactId>xml-apis</artifactId>
        </exclusion>
        <exclusion>
          <artifactId>commons-logging</artifactId>
          <groupId>commons-logging</groupId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.picketbox</groupId>
      <artifactId>picketbox</artifactId>
      <version>4.9.4.Final</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.webjars.bower</groupId>
      <artifactId>commonmark</artifactId>
      <version>0.20.0</version>
    </dependency>

    <dependency>
      <groupId>org.webjars.bower</groupId>
      <artifactId>google-caja</artifactId>
      <version>5669.0.0</version>
    </dependency>

    <dependency>
      <groupId>javax.validation</groupId>
      <artifactId>validation-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>se.jiderhamn</groupId>
      <artifactId>classloader-leak-prevention</artifactId>
      <version>1.15.1</version>
      <exclusions>
        <exclusion>
          <groupId>javax.servlet</groupId>
          <artifactId>servlet-api</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.cxf</groupId>
          <artifactId>cxf-rt-transports-http</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>com.jamonapi</groupId>
      <artifactId>jamon</artifactId>
      <version>2.75</version>
      <scope>test</scope>
    </dependency>

    <!--  missing dependencies identified by mvn dependency:analyze: -->

    <dependency>
      <groupId>org.fedorahosted.tennera</groupId>
      <artifactId>jgettext</artifactId>
    </dependency>
    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
    </dependency>
    <dependency>
      <groupId>com.beust</groupId>
      <artifactId>jcommander</artifactId>
      <version>1.27</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>jaxrs-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jboss.spec.javax.xml.bind</groupId>
      <artifactId>jboss-jaxb-api_2.2_spec</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>xmlunit</groupId>
      <artifactId>xmlunit</artifactId>
      <version>1.4</version>
    </dependency>
    <dependency>
      <!-- New group Id -->
      <groupId>com.io7m.xom</groupId>
      <artifactId>xom</artifactId>
      <exclusions>
        <exclusion>
          <artifactId>xalan</artifactId>
          <groupId>xalan</groupId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- because some class references class under gwt shared package. e.g. IsSerializable-->
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-servlet</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-user</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>net.customware.gwt.presenter</groupId>
      <artifactId>gwt-presenter</artifactId>
    </dependency>
    <dependency>
      <groupId>de.novanic.gwteventservice</groupId>
      <artifactId>gwteventservice</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.gwt.gwtmockito</groupId>
      <artifactId>gwtmockito</artifactId>
      <version>1.1.2</version>
      <scope>test</scope>
    </dependency>


    <dependency>
      <groupId>org.scannotation</groupId>
      <artifactId>scannotation</artifactId>
      <version>1.0.3</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>javassist</groupId>
          <artifactId>javassist</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

  </dependencies>


</project>
