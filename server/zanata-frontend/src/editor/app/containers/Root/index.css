  /** @define Editor; use strict */

:root {
  --Editor-rhythm                         : 1.5rem;
  --Editor-transition-ease                : cubic-bezier(.175, .885, .320, 1.275);
  --Editor-color-status-bg                : color(#416988 tint(82%));
  --Editor-color-translation-bg           : #ECEFF0;
  --Editor-loader-z-index                 : 900;
  --Editor-panel-z-index                  : 200;
  --Editor-suggestions-header-z-index     : 300;
  --Editor-suggestionsSearch-z-index      : 300;
}

.Editor {
  overflow: hidden;
}

.Editor-header,
.Editor-loader {
  transition: .2s all var(--Editor-transition-ease);
}

.Editor-header.is-minimised {
  transform: translateY(calc(var(--Editor-rhythm) * -2));
}

.Editor-header.is-minimised .Editor-mainNav {
  visibility: hidden;
}

.Editor-loader {
  position: absolute;
  z-index: var(--Editor-loader-z-index);
  top: 0;
  left: 50%;
  transform: translate(-50%, calc(var(--Editor-rhythm) * .25));
}

.Editor-docsDropdown button.Link--invert div span {
  max-width: 25em;
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
}

li.docName {
  max-width:20em;
}

li.docName span.ellipsis {
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
}

.Editor-loader.is-minimised {
  transform: translateX(-50%) scale(.75, .75);
}

.Editor-mainNav {
  height: calc(var(--Editor-rhythm) * 2);
}

.Editor-content {
  position: absolute;
  left: 0;
  right: 0;
  top: calc(var(--Editor-rhythm) * 3.75);
  bottom: 0;
  overflow: auto;
  overflow-x: hidden;
  width: 100%;
  -webkit-overlow-scrolling: touch;
}

.Editor-content.is-maximised {
  top: calc(var(--Editor-rhythm) * 1.75);
}

/*So firefox keeps the background at 100% height when there are only a few translations*/
.Editor-translationsWrapper {
  height: 100%;
}

.Editor-translations {
  min-height: 100%;
  padding: calc(var(--Editor-rhythm) * 2) 0;
  background: linear-gradient(to right, var(--Editor-color-status-bg), var(--Editor-color-status-bg));
  background-position: left center;
  background-size: var(--rhythm) 100%;
  background-repeat: no-repeat;
}

.Editor-currentDoc {
  max-width: calc(var(--Editor-rhythm) * 3.5);
}

.Editor-currentLang {
  max-width: calc(var(--Editor-rhythm) * 3.5);
}

.Editor-suggestions {
  z-index: var(--Editor-panel-z-index);
  right: 0;
  bottom: 0;
  left: 0;
  overflow: hidden;
  box-shadow: 0 -calc(var(--Editor-rhythm) * .125) var(--Header-rhythm) rgba(0,0,0,.1);
  /*transform: translateY(100%);*/
}

.Editor-suggestionsHeader {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  box-shadow: 0 1px 1px rgba(0,0,0,0.1);
  z-index: var(--Editor-suggestions-header-z-index);
  user-select: none;
}

.Editor-suggestionsBody {
  /* Fallback */
  position: absolute;
  top: calc(var(--Editor-rhythm) * 1.5);
  left: 0;
  right: 0;
  bottom: 0;
  overflow: scroll;
  overflow-x: hidden;
  overflow-y: scroll;
}

.Editor-suggestions.is-search-active .Editor-suggestionsBody {
  top: calc(var(--Editor-rhythm) * 3);
}

.Editor-suggestionsSearch {
  clear: both;
}

/**
 * Media Queries
 */

@media (--sm-viewport) {
  .Editor-currentProject {
    max-width: calc(var(--Editor-rhythm) * 3.5);
  }
}

@media (--gtemd-viewport) {
  .Editor-translations {
    background:
      linear-gradient(to right, var(--Editor-color-status-bg), var(--Editor-color-status-bg)),
      linear-gradient(to right, var(--Editor-color-translation-bg), var(--Editor-color-translation-bg));
    background-position:
      center,
      right;
    background-size:
      var(--rhythm) 100%,
      50% 100%;
    background-repeat:
      no-repeat;
  }
}
