<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE log4j:configuration SYSTEM "log4j.dtd" >
<log4j:configuration>
  <throwableRenderer class="org.apache.log4j.EnhancedThrowableRenderer" />
  <appender name="STDOUT" class="org.apache.log4j.ConsoleAppender">
    <param name="threshold" value="DEBUG" />
    <layout class="org.apache.log4j.PatternLayout">
      <param name="ConversionPattern" value="%d{HH:mm:ss,SSS} [%t] %-5p %c{4} - %m%n" />
    </layout>
  </appender>

  <!--
    NB Third-party code (eg javax.faces, DeltaSpike, Arquillian) which uses java.util.logging will be
    directed here by SLF4JBridgeHandler, but JUL Logger thresholds must be configured in both systems.
    Also, disabling logging here won't prevent unneeded JUL log messages from being created.
    See logging-test.properties.
  -->

  <!--
      <logger name="org.hibernate">
          <level value="info" />
      </logger>
  -->
  <!-- below will log hibernate generated SQL-->
  <!--<logger name="org.hibernate.SQL">-->
      <!--<level value="TRACE" />-->
  <!--</logger>-->
  <logger name="jdbc">
    <level value="OFF" />
  </logger>
  <!-- this require log4jdbc -->
  <!--
  <logger name="jdbc.sqlonly">
    <level value="DEBUG" />
  </logger>
  -->
  <!-- this can tell (somewhat) whether a jdbc batch is executed. Best to rely on mysql general log -->
  <!--
  <logger name="org.hibernate.engine.jdbc.batch.internal.BatchingBatch">
    <level value="DEBUG" />
  </logger>
  -->
  <!-- this will show hibernate configuration settings -->
  <!--
  <logger name="org.hibernate.cfg.SettingsFactory">
    <level value="DEBUG" />
  </logger>
  -->
  <logger name="org.hibernate.tool.hbm2ddl.SchemaExport">
    <level value="OFF" />
  </logger>
  <logger name="gwt-log">
    <level value="OFF" />
  </logger>
  <logger name="org.zanata.servlet">
    <level value="ERROR"/>
  </logger>
  <root>
    <level value="INFO" />
    <appender-ref ref="STDOUT" />
  </root>
</log4j:configuration>
